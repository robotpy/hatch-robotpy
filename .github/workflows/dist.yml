---
name: dist

on:
  pull_request:
  push:
    branches:
    - main
    tags:
    - '*'

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: psf/black@stable
  
  check-mypy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    # - uses: jpetrucciani/mypy-check@0.930
    # .. can't use that because we need to install pytest
    - uses: actions/setup-python@v5
      with:
        python-version: "3.8"
    - name: Install requirements
      run: |
        pip --disable-pip-version-check install mypy .
    - name: Run mypy
      run: |
        mypy .

  #
  # Build a wheel
  #

  build:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 0

    - uses: actions/setup-python@v5
      with:
        python-version: "3.8"

    - run: pipx run build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist

  # test:
  #   needs: [build]
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     matrix:
  #       os: [windows-latest, macos-13, ubuntu-20.04]
  #       python_version: [3.6, 3.7, 3.8, 3.9, "3.10", "3.11", "3.12"]
  #       architecture: [x86, x64]
  #       exclude:
  #       - os: macos-13
  #         architecture: x86
  #       - os: ubuntu-20.04
  #         architecture: x86

  #   steps:
  #   - uses: actions/checkout@v4
  #     with:
  #       submodules: recursive
  #       fetch-depth: 0
    
  #   - uses: actions/setup-python@v5
  #     with:
  #       python-version: ${{ matrix.python_version }}
  #       architecture: ${{ matrix.architecture }}

  #   - name: Download build artifacts
  #     uses: actions/download-artifact@v4
  #     with:
  #       name: dist
  #       path: dist
    
  #   - name: Install test dependencies
  #     run: python -m pip --disable-pip-version-check install -r tests/requirements.txt
    
  #   - name: Setup MSVC compiler
  #     uses: ilammy/msvc-dev-cmd@v1
  #     if: matrix.os == 'windows-latest'

  #   - name: Test wheel
  #     shell: bash
  #     run: |
  #       cd dist
  #       python -m pip --disable-pip-version-check install *.whl
  #       cd ../tests
  #       python -m pytest

  publish:
    runs-on: ubuntu-latest
    # needs: [check, check-mypy, check-doc, build, test]
    needs: [check, check-mypy, build]
    permissions:
      id-token: write
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')

    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
